{"ast":null,"code":"var _jsxFileName = \"/Users/williamsmall/Documents/clicky-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport Title from \"./Components/home\";\nimport Gamespace from \"./Components/gameSpace\";\nimport Creatures from \"./Creature.json\";\nimport Creat from \"./Components/creat\";\nimport Scorecard from \"./Components/scorecard\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Creatures,\n      score: 0\n    };\n\n    this.imageClick = event => {\n      console.log(event.target.id);\n      shuffle(state.Creatures);\n      console.log(\"done\");\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Gamespace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, this.state.Creatures.map(Creature => React.createElement(Creat, {\n      key: Creature.id,\n      id: Creature.id,\n      image: Creature.image,\n      ImageClick: this.imageClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }))), React.createElement(Scorecard, {\n      score: this.state.score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction shuffle(array) {\n  let i = array.length - 1;\n\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  console.log(\"shuffle\");\n  return array;\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/williamsmall/Documents/clicky-game/src/App.js"],"names":["React","Component","Title","Gamespace","Creatures","Creat","Scorecard","App","state","score","imageClick","event","console","log","target","id","shuffle","render","map","Creature","image","array","i","length","j","Math","floor","random","temp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AACA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNJ,MAAAA,SADM;AAENK,MAAAA,KAAK,EAAE;AAFD,KAFkB;;AAAA,SAO1BC,UAP0B,GAObC,KAAK,IAAI;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,EAAzB;AACDC,MAAAA,OAAO,CAACR,KAAK,CAACJ,SAAP,CAAP;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,KAXyB;AAAA;;AAY1BI,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWJ,SAAX,CAAqBc,GAArB,CAAyBC,QAAQ,IAChC,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEA,QAAQ,CAACJ,EADhB;AAEE,MAAA,EAAE,EAAEI,QAAQ,CAACJ,EAFf;AAGE,MAAA,KAAK,EAAEI,QAAQ,CAACC,KAHlB;AAIE,MAAA,UAAU,EAAE,KAAKV,UAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAFF,EAYE,oBAAC,SAAD;AACA,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAkBD;;AA/ByB;;AAiC5B,SAASO,OAAT,CAAiBK,KAAjB,EAAwB;AACtB,MAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAvB;;AACA,SAAOD,CAAC,GAAG,CAAX,EAAcA,CAAC,EAAf,EAAmB;AACjB,UAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,UAAMM,IAAI,GAAGP,KAAK,CAACC,CAAD,CAAlB;AACAD,IAAAA,KAAK,CAACC,CAAD,CAAL,GAAWD,KAAK,CAACG,CAAD,CAAhB;AACAH,IAAAA,KAAK,CAACG,CAAD,CAAL,GAAWI,IAAX;AACD;;AACDhB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,SAAOQ,KAAP;AACD;;AAAA;AACD,eAAed,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Title from \"./Components/home\";\nimport Gamespace from \"./Components/gameSpace\";\nimport Creatures from \"./Creature.json\";\nimport Creat from \"./Components/creat\";\nimport Scorecard from \"./Components/scorecard\";\nclass App extends Component {\n\n  state = {\n    Creatures,\n    score: 0\n  };\n\n  imageClick = event => {\n    console.log(event.target.id)\n   shuffle(state.Creatures);\n   console.log(\"done\");\n  }\n  render() {\n    return (\n      <div>\n        <Title/>\n        <Gamespace>\n          {this.state.Creatures.map(Creature => (\n            <Creat\n              key={Creature.id}\n              id={Creature.id}\n              image={Creature.image}\n              ImageClick={this.imageClick} />\n\n          ))}\n        </Gamespace>\n        <Scorecard\n        score={this.state.score}\n        />\n      </div>\n    );\n  }\n}\nfunction shuffle(array) {\n  let i = array.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  console.log(\"shuffle\");\n  return array;\n};\nexport default App;"]},"metadata":{},"sourceType":"module"}